// <auto-generated />
using System;
using ConsoleApp1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(BewerberDbContext))]
    [Migration("20200130135904_AddBewerber")]
    partial class AddBewerber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp1.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BewerberId")
                        .HasColumnType("int");

                    b.Property<string>("Ort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strasse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdresseId");

                    b.HasIndex("BewerberId");

                    b.ToTable("AdresseSet");
                });

            modelBuilder.Entity("ConsoleApp1.Ausschreibung", b =>
                {
                    b.Property<int>("AusschreibungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Einstellungsdatum")
                        .HasColumnType("datetime2");

                    b.HasKey("AusschreibungId");

                    b.ToTable("AusschreibungSet");
                });

            modelBuilder.Entity("ConsoleApp1.AusschreibungBewerber", b =>
                {
                    b.Property<int>("AusschreibungBewerberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AusschreibungId")
                        .HasColumnType("int");

                    b.Property<int>("BewerberId")
                        .HasColumnType("int");

                    b.HasKey("AusschreibungBewerberId");

                    b.HasIndex("AusschreibungId");

                    b.HasIndex("BewerberId");

                    b.ToTable("AusschreibungBewerberSet");
                });

            modelBuilder.Entity("ConsoleApp1.Bewerber", b =>
                {
                    b.Property<int>("BewerberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nachname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vorname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BewerberId");

                    b.ToTable("BewerberSet");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Bewerber");
                });

            modelBuilder.Entity("ConsoleApp1.BewerberJung", b =>
                {
                    b.HasBaseType("ConsoleApp1.Bewerber");

                    b.Property<bool>("UnterschriftErziehungsberechtigteVorhanden")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("BewerberJung");
                });

            modelBuilder.Entity("ConsoleApp1.Adresse", b =>
                {
                    b.HasOne("ConsoleApp1.Bewerber", "Bewerber")
                        .WithMany("Adressen")
                        .HasForeignKey("BewerberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("ConsoleApp1.AuslandAdresse", "AuslandAdressen", b1 =>
                        {
                            b1.Property<int>("AdresseId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Adresse1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Adresse2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Adresse3")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AdresseId", "Id");

                            b1.ToTable("AuslandAdresse");

                            b1.WithOwner()
                                .HasForeignKey("AdresseId");
                        });
                });

            modelBuilder.Entity("ConsoleApp1.AusschreibungBewerber", b =>
                {
                    b.HasOne("ConsoleApp1.Ausschreibung", "Ausschreibung")
                        .WithMany("AusschreibungenBewerber")
                        .HasForeignKey("AusschreibungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp1.Bewerber", "Bewerber")
                        .WithMany("AusschreibungenBewerber")
                        .HasForeignKey("BewerberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
